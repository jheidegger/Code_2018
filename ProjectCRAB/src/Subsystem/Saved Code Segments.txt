				/*/
				case Stowed:
					//move to any state through unStowing
					if(wantedState != currState)
					{
						currState = systemStates.unStowing;
					}
					lastState = systemStates.Stowed;
					stowingMotor.set(0.0);
					break;
				case Stowing:
					
	 				if(isIntakeStowed.get()||controller.actuatorOpenLoop()>0) {
						stowingMotor.set(controller.actuatorOpenLoop()*.4);
				
					else {
						stowingMotor.set(0);
					}
	 				rightSideWheel.set(0.0);
 					leftSideWheel.set(0.0);
	 				checkState();
	 				break;
					if(lastState != systemStates.Stowing)
					{
						stowingTimer.start();
						stowingTimer.reset();
					}
					if(stowingTimer.get()<kStowingTime){
						stowingMotor.set(1.0);
					}
					else
					{
						stowingMotor.set(0.0);
						currState = systemStates.Stowed;
					}
					
					if(!isIntakeStowed){
						stowingMotor.set(actuatorPID.returnOutput(encoder.getRaw(), 0));
					}
					else{
						wantedState = systemStates.Stowed;
					}
					//if(encoder.getRaw() > -10 && encoder.getRaw() < 10) {
					//	wantedState = systemStates.Stowed;
					//}
					if(wantedState != currState)
					{
						currState = wantedState;
						stowingMotor.set(0.0);
					}
					
				case unStowing:
					/*if(lastState != systemStates.unStowing)
					{
						stowingTimer.start();
						stowingTimer.reset();
					}
					if(stowingTimer.get()<kUnStowingTime)
					{
						stowingMotor.set(-1.0);
					}
					else
					{
						stowingMotor.set(0.0);
						currState = systemStates.Neutral;
					}
					stowingMotor.set(actuatorPID.returnOutput(encoder.getRaw(), 409.0));
					if(encoder.getRaw() > -399 && encoder.getRaw() < 419) {
						currState = systemStates.Neutral;
					}
					if(wantedState != currState)
					{
						currState = wantedState;
						stowingMotor.set(0.0);
					}
					break;*/
	